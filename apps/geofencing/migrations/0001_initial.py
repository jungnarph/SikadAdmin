# Generated by Django 4.2.7 on 2025-10-03 19:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('firebase_id', models.CharField(db_index=True, help_text='Document ID from Firebase', max_length=255, unique=True)),
                ('name', models.CharField(help_text='Zone name', max_length=100)),
                ('color_code', models.CharField(default='#3388ff', help_text='Hex color code for map display', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
                ('center_latitude', models.DecimalField(blank=True, decimal_places=7, help_text='Center latitude of the zone', max_digits=10, null=True)),
                ('center_longitude', models.DecimalField(blank=True, decimal_places=7, help_text='Center longitude of the zone', max_digits=10, null=True)),
                ('polygon_points', models.JSONField(default=list, help_text='List of lat/lng points defining the polygon boundary')),
                ('synced_at', models.DateTimeField(auto_now=True, help_text='Last sync from Firebase')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, help_text='Admin user who created this zone', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_zones', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Zone',
                'verbose_name_plural': 'Zones',
                'db_table': 'zones',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ZoneViolation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('bike_id', models.CharField(db_index=True, help_text='Firebase bike document ID', max_length=255)),
                ('customer_id', models.CharField(db_index=True, help_text='Firebase customer document ID', max_length=255)),
                ('rental_id', models.CharField(blank=True, db_index=True, help_text='Firebase rental document ID (if applicable)', max_length=255, null=True)),
                ('violation_type', models.CharField(choices=[('EXIT_ZONE', 'Exit Zone'), ('UNAUTHORIZED_PARKING', 'Unauthorized Parking'), ('SPEED_LIMIT', 'Speed Limit Violation')], max_length=30)),
                ('latitude', models.DecimalField(decimal_places=7, help_text='Latitude where violation occurred', max_digits=10)),
                ('longitude', models.DecimalField(decimal_places=7, help_text='Longitude where violation occurred', max_digits=10)),
                ('violation_time', models.DateTimeField(help_text='When the violation occurred')),
                ('resolved', models.BooleanField(default=False)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional notes or resolution details')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('zone', models.ForeignKey(db_column='zone_firebase_id', help_text='Reference to zone by Firebase ID', on_delete=django.db.models.deletion.CASCADE, related_name='violations', to='geofencing.zone', to_field='firebase_id')),
            ],
            options={
                'verbose_name': 'Zone Violation',
                'verbose_name_plural': 'Zone Violations',
                'db_table': 'zone_violations',
                'ordering': ['-violation_time'],
                'indexes': [models.Index(fields=['zone', 'violation_time'], name='zone_violat_zone_fi_741372_idx'), models.Index(fields=['bike_id'], name='zone_violat_bike_id_5df222_idx'), models.Index(fields=['customer_id'], name='zone_violat_custome_83bca8_idx'), models.Index(fields=['violation_time'], name='zone_violat_violati_f70294_idx'), models.Index(fields=['resolved'], name='zone_violat_resolve_ca8612_idx')],
            },
        ),
        migrations.CreateModel(
            name='ZonePerformance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('performance_date', models.DateField(help_text='Date for this performance record')),
                ('total_rentals', models.IntegerField(default=0, help_text='Number of rentals started in this zone')),
                ('total_violations', models.IntegerField(default=0, help_text='Number of violations in this zone')),
                ('revenue_generated', models.DecimalField(decimal_places=2, default=0, help_text='Total revenue from rentals in this zone', max_digits=10)),
                ('unique_bikes', models.IntegerField(default=0, help_text='Number of unique bikes used')),
                ('unique_customers', models.IntegerField(default=0, help_text='Number of unique customers')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('zone', models.ForeignKey(db_column='zone_firebase_id', help_text='Reference to zone by Firebase ID', on_delete=django.db.models.deletion.CASCADE, related_name='performance_records', to='geofencing.zone', to_field='firebase_id')),
            ],
            options={
                'verbose_name': 'Zone Performance',
                'verbose_name_plural': 'Zone Performance',
                'db_table': 'zone_performance',
                'ordering': ['-performance_date'],
                'indexes': [models.Index(fields=['zone', 'performance_date'], name='zone_perfor_zone_fi_8d6c9f_idx'), models.Index(fields=['performance_date'], name='zone_perfor_perform_55f8fe_idx')],
                'unique_together': {('zone', 'performance_date')},
            },
        ),
        migrations.AddIndex(
            model_name='zone',
            index=models.Index(fields=['firebase_id'], name='zones_firebas_eb483f_idx'),
        ),
        migrations.AddIndex(
            model_name='zone',
            index=models.Index(fields=['is_active'], name='zones_is_acti_eda58f_idx'),
        ),
    ]
