# Generated by Django 4.2.7 on 2025-10-05 14:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('firebase_id', models.CharField(db_index=True, help_text='Document ID from Firebase (UID)', max_length=255, unique=True)),
                ('email', models.EmailField(blank=True, max_length=255)),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('full_name', models.CharField(blank=True, max_length=255)),
                ('profile_image_url', models.URLField(blank=True, max_length=500, null=True)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('SUSPENDED', 'Suspended'), ('BANNED', 'Banned'), ('PENDING', 'Pending Verification')], default='ACTIVE', max_length=20)),
                ('verification_status', models.CharField(choices=[('UNVERIFIED', 'Unverified'), ('PENDING', 'Pending'), ('VERIFIED', 'Verified'), ('REJECTED', 'Rejected')], default='UNVERIFIED', max_length=20)),
                ('id_document_url', models.URLField(blank=True, max_length=500, null=True)),
                ('id_document_type', models.CharField(blank=True, max_length=50)),
                ('id_verified_at', models.DateTimeField(blank=True, null=True)),
                ('email_verified', models.BooleanField(default=False)),
                ('phone_verified', models.BooleanField(default=False)),
                ('registration_date', models.DateTimeField(blank=True, null=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('total_rides', models.IntegerField(default=0)),
                ('total_spent', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('account_balance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('suspension_reason', models.TextField(blank=True)),
                ('suspended_at', models.DateTimeField(blank=True, null=True)),
                ('admin_notes', models.TextField(blank=True, help_text='Internal notes for admins')),
                ('synced_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('suspended_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='suspended_customers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
                'db_table': 'customers',
                'ordering': ['-registration_date'],
            },
        ),
        migrations.CreateModel(
            name='CustomerPaymentMethod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('payment_type', models.CharField(choices=[('GCASH', 'GCash'), ('PAYMAYA', 'PayMaya'), ('CARD', 'Credit/Debit Card'), ('BANK', 'Bank Transfer')], max_length=20)),
                ('provider_reference', models.CharField(blank=True, max_length=255)),
                ('masked_number', models.CharField(blank=True, max_length=50)),
                ('holder_name', models.CharField(blank=True, max_length=255)),
                ('is_default', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(db_column='customer_firebase_id', on_delete=django.db.models.deletion.CASCADE, related_name='payment_methods', to='customers.customer', to_field='firebase_id')),
            ],
            options={
                'verbose_name': 'Payment Method',
                'verbose_name_plural': 'Payment Methods',
                'db_table': 'customer_payment_methods',
                'ordering': ['-is_default', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CustomerStatistics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('stats_date', models.DateField()),
                ('rides_count', models.IntegerField(default=0)),
                ('total_distance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_duration', models.IntegerField(default=0, help_text='Total minutes')),
                ('total_spent', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(db_column='customer_firebase_id', on_delete=django.db.models.deletion.CASCADE, related_name='statistics', to='customers.customer', to_field='firebase_id')),
            ],
            options={
                'verbose_name': 'Customer Statistics',
                'verbose_name_plural': 'Customer Statistics',
                'db_table': 'customer_statistics',
                'ordering': ['-stats_date'],
                'indexes': [models.Index(fields=['customer', 'stats_date'], name='customer_st_custome_303445_idx'), models.Index(fields=['stats_date'], name='customer_st_stats_d_9eaffd_idx')],
                'unique_together': {('customer', 'stats_date')},
            },
        ),
        migrations.CreateModel(
            name='CustomerRideHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('firebase_id', models.CharField(db_index=True, max_length=255, unique=True)),
                ('bike_id', models.CharField(db_index=True, max_length=255)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('duration_minutes', models.IntegerField(default=0)),
                ('start_latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('start_longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('end_latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('end_longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('start_zone_id', models.CharField(blank=True, max_length=255)),
                ('end_zone_id', models.CharField(blank=True, max_length=255)),
                ('distance_km', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('amount_charged', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('payment_status', models.CharField(default='PENDING', max_length=20)),
                ('rental_status', models.CharField(choices=[('ACTIVE', 'Active'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], default='ACTIVE', max_length=20)),
                ('cancellation_reason', models.TextField(blank=True)),
                ('synced_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(db_column='customer_firebase_id', on_delete=django.db.models.deletion.CASCADE, related_name='ride_history', to='customers.customer', to_field='firebase_id')),
            ],
            options={
                'verbose_name': 'Ride History',
                'verbose_name_plural': 'Ride History',
                'db_table': 'customer_ride_history',
                'ordering': ['-start_time'],
                'indexes': [models.Index(fields=['customer', 'start_time'], name='customer_ri_custome_ea0d30_idx'), models.Index(fields=['bike_id'], name='customer_ri_bike_id_12370f_idx'), models.Index(fields=['start_time'], name='customer_ri_start_t_063bf8_idx'), models.Index(fields=['rental_status'], name='customer_ri_rental__239eed_idx')],
            },
        ),
        migrations.CreateModel(
            name='CustomerActivityLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('activity_type', models.CharField(choices=[('REGISTRATION', 'Registration'), ('LOGIN', 'Login'), ('LOGOUT', 'Logout'), ('RENTAL_START', 'Rental Started'), ('RENTAL_END', 'Rental Ended'), ('PAYMENT', 'Payment Made'), ('PROFILE_UPDATE', 'Profile Updated'), ('VERIFICATION_SUBMITTED', 'Verification Submitted'), ('SUSPENSION', 'Account Suspended'), ('REACTIVATION', 'Account Reactivated')], max_length=30)),
                ('description', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('device_info', models.CharField(blank=True, max_length=255)),
                ('related_id', models.CharField(blank=True, help_text='Related rental, payment, etc.', max_length=255)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(db_column='customer_firebase_id', on_delete=django.db.models.deletion.CASCADE, related_name='activity_logs', to='customers.customer', to_field='firebase_id')),
            ],
            options={
                'verbose_name': 'Activity Log',
                'verbose_name_plural': 'Activity Logs',
                'db_table': 'customer_activity_logs',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['customer', 'timestamp'], name='customer_ac_custome_327bb8_idx'), models.Index(fields=['activity_type'], name='customer_ac_activit_4c1af9_idx'), models.Index(fields=['timestamp'], name='customer_ac_timesta_032607_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['firebase_id'], name='customers_firebas_09ac4e_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['email'], name='customers_email_92e882_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['phone_number'], name='customers_phone_n_7d2329_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['status'], name='customers_status_47bd31_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['registration_date'], name='customers_registr_3b03b8_idx'),
        ),
    ]
